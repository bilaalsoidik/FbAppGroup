<?php

use Symfony\Component\Routing\RequestContext;
use Symfony\Component\Routing\Exception\RouteNotFoundException;
use Psr\Log\LoggerInterface;

/**
 * appDevUrlGenerator
 *
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class appDevUrlGenerator extends Symfony\Component\Routing\Generator\UrlGenerator
{
    static private $declaredRoutes = array(
        '_wdt' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:toolbarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_wdt',    ),  ),  4 =>   array (  ),),
        '_profiler_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:homeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/',    ),  ),  4 =>   array (  ),),
        '_profiler_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search',    ),  ),  4 =>   array (  ),),
        '_profiler_search_bar' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchBarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search_bar',    ),  ),  4 =>   array (  ),),
        '_profiler_purge' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:purgeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/purge',    ),  ),  4 =>   array (  ),),
        '_profiler_info' => array (  0 =>   array (    0 => 'about',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:infoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'about',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler/info',    ),  ),  4 =>   array (  ),),
        '_profiler_import' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:importAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/import',    ),  ),  4 =>   array (  ),),
        '_profiler_export' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:exportAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '.txt',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler/export',    ),  ),  4 =>   array (  ),),
        '_profiler_phpinfo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:phpinfoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/phpinfo',    ),  ),  4 =>   array (  ),),
        '_profiler_search_results' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchResultsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/search/results',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),),
        '_profiler' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),),
        '_profiler_router' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.router:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/router',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),),
        '_profiler_exception' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),),
        '_profiler_exception_css' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:cssAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception.css',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),),
        '_configurator_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::checkAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_configurator/',    ),  ),  4 =>   array (  ),),
        '_configurator_step' => array (  0 =>   array (    0 => 'index',  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::stepAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'index',    ),    1 =>     array (      0 => 'text',      1 => '/_configurator/step',    ),  ),  4 =>   array (  ),),
        '_configurator_final' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::finalAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_configurator/final',    ),  ),  4 =>   array (  ),),
        'f_bgroupe_accueil' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FB\\groupeBundle\\Controller\\AccueilController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),),
        '_security_check' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FB\\groupeBundle\\Controller\\AccueilController::login_reussiAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/Init_Groupes',    ),  ),  4 =>   array (  ),),
        'f_bgroupe_getFormGroup' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FB\\groupeBundle\\Controller\\AccueilController::getFormGroupAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/Init_Groupes/formGroup',    ),  ),  4 =>   array (  ),),
        'f_bgroupe_ajouterGroup' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FB\\groupeBundle\\Controller\\AccueilController::ajouterGroupAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/Init_Groupes/ajouterGroup',    ),  ),  4 =>   array (  ),),
        'f_bgroupe_supprimerGroup' => array (  0 =>   array (    0 => 'idgp',  ),  1 =>   array (    '_controller' => 'FB\\groupeBundle\\Controller\\AccueilController::supprimerGroupAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idgp',    ),    1 =>     array (      0 => 'text',      1 => '/Init_Groupes/suppGrp',    ),  ),  4 =>   array (  ),),
        'FB_importMb' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FB\\groupeBundle\\Controller\\AccueilController::supprimerGroupAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/Init_Groupes/importMembre',    ),  ),  4 =>   array (  ),),
        '_security_logout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FB\\groupeBundle\\Controller\\AccueilController::deconnecteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/logout',    ),  ),  4 =>   array (  ),),
        'f_bgroupe_getObjet' => array (  0 =>   array (    0 => 'id',    1 => 'entite',  ),  1 =>   array (    '_controller' => 'FB\\groupeBundle\\Controller\\AccueilController::getObjetAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '',      2 => '[^/]++',      3 => 'entite',    ),    1 =>     array (      0 => 'text',      1 => '&',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'id',    ),    3 =>     array (      0 => 'text',      1 => '/donnes',    ),  ),  4 =>   array (  ),),
        'import_membres' => array (  0 =>   array (    0 => 'id_groupe',    1 => 'nbrmembre',    2 => 'limit',  ),  1 =>   array (    'limit' => 40,    '_controller' => 'FB\\groupeBundle\\Controller\\ImportDataController::importMembresAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '',      2 => '[^/]++',      3 => 'limit',    ),    1 =>     array (      0 => 'text',      1 => '&',    ),    2 =>     array (      0 => 'variable',      1 => '',      2 => '[^/]+',      3 => 'nbrmembre',    ),    3 =>     array (      0 => 'text',      1 => '&',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'id_groupe',    ),    5 =>     array (      0 => 'text',      1 => '/importmembres',    ),  ),  4 =>   array (  ),),
        'importPost' => array (  0 =>   array (    0 => 'id_groupe',    1 => 'MODE_IMPORT',    2 => 'limit',    3 => 'date_depuis',    4 => 'date_jusqua',  ),  1 =>   array (    'date_depuis' => NULL,    'date_jusqua' => NULL,    '_controller' => 'FB\\groupeBundle\\Controller\\ImportDataController::importPostsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '',      2 => '[^/]++',      3 => 'date_jusqua',    ),    1 =>     array (      0 => 'text',      1 => '&',    ),    2 =>     array (      0 => 'variable',      1 => '',      2 => '[^/]+',      3 => 'date_depuis',    ),    3 =>     array (      0 => 'text',      1 => '&',    ),    4 =>     array (      0 => 'variable',      1 => '',      2 => '[^/]+',      3 => 'limit',    ),    5 =>     array (      0 => 'text',      1 => '&',    ),    6 =>     array (      0 => 'variable',      1 => '',      2 => '[^/]+',      3 => 'MODE_IMPORT',    ),    7 =>     array (      0 => 'text',      1 => '&',    ),    8 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'id_groupe',    ),    9 =>     array (      0 => 'text',      1 => '/importposts',    ),  ),  4 =>   array (  ),),
        'importTout' => array (  0 =>   array (    0 => 'id_groupe',    1 => 'MODE_IMPORT',    2 => 'limit',  ),  1 =>   array (    'MODE_IMPORT' => 1,    'date_depuis' => NULL,    'date_jusqua' => NULL,    '_controller' => 'FB\\groupeBundle\\Controller\\ImportDataController::importPostsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '',      2 => '[^/]++',      3 => 'limit',    ),    1 =>     array (      0 => 'text',      1 => '&',    ),    2 =>     array (      0 => 'variable',      1 => '',      2 => '[^/]+',      3 => 'MODE_IMPORT',    ),    3 =>     array (      0 => 'text',      1 => '&',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'id_groupe',    ),    5 =>     array (      0 => 'text',      1 => '/importposts',    ),  ),  4 =>   array (  ),),
        'postsProgress' => array (  0 =>   array (    0 => 'id_gp',  ),  1 =>   array (    '_controller' => 'FB\\groupeBundle\\Controller\\ImportDataController::progressPostsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_gp',    ),    1 =>     array (      0 => 'text',      1 => '/importposts/progress',    ),  ),  4 =>   array (  ),),
        'membresProgress' => array (  0 =>   array (    0 => 'id_gp',  ),  1 =>   array (    '_controller' => 'FB\\groupeBundle\\Controller\\ImportDataController::progressMembresAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_gp',    ),    1 =>     array (      0 => 'text',      1 => '/importmembres/progress',    ),  ),  4 =>   array (  ),),
        'vues_importpost' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FB\\groupeBundle\\Controller\\ImportDataController::sendVuesImportPostAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/importposts/vues',    ),  ),  4 =>   array (  ),),
    );

    /**
     * Constructor.
     */
    public function __construct(RequestContext $context, LoggerInterface $logger = null)
    {
        $this->context = $context;
        $this->logger = $logger;
    }

    public function generate($name, $parameters = array(), $referenceType = self::ABSOLUTE_PATH)
    {
        if (!isset(self::$declaredRoutes[$name])) {
            throw new RouteNotFoundException(sprintf('Unable to generate a URL for the named route "%s" as such route does not exist.', $name));
        }

        list($variables, $defaults, $requirements, $tokens, $hostTokens) = self::$declaredRoutes[$name];

        return $this->doGenerate($variables, $defaults, $requirements, $tokens, $parameters, $name, $referenceType, $hostTokens);
    }
}
